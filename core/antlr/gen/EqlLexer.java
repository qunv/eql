// Generated from /home/quannguyen20/Documents/self/eql/core/antlr/EqlLexer.g4 by ANTLR 4.12.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class EqlLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.12.0", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		PLUS=1, MINUS=2, DIV=3, MULT=4, LPAREN=5, RPAREN=6, LCURLY=7, RCURLY=8, 
		LBRACKET=9, RBRACKET=10, EQUAL=11, SEMI=12, COLON=13, COMMA=14, GREATER_THAN=15, 
		LESS_THAN=16, TRUE=17, FALSE=18, SUM=19, ABS=20, AVG=21, ADD=22, DIVIDE=23, 
		MULTIPLY=24, EQ=25, CONCAT=26, GT=27, GTE=28, IF=29, DIGIT=30, IDENTIFIER=31, 
		WS=32, EOS=33;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"PLUS", "MINUS", "DIV", "MULT", "LPAREN", "RPAREN", "LCURLY", "RCURLY", 
			"LBRACKET", "RBRACKET", "EQUAL", "SEMI", "COLON", "COMMA", "GREATER_THAN", 
			"LESS_THAN", "TRUE", "FALSE", "SUM", "ABS", "AVG", "ADD", "DIVIDE", "MULTIPLY", 
			"EQ", "CONCAT", "GT", "GTE", "IF", "DIGIT", "IDENTIFIER", "WS", "EOS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'+'", "'-'", "'/'", "'*'", "'('", "')'", "'{'", "'}'", "'['", 
			"']'", "'='", "';'", "':'", "','", "'>'", "'<'", "'TRUE'", "'FALSE'", 
			"'SUM'", "'ABS'", "'AVG'", "'ADD'", "'DIVIDE'", "'MULTIPLY'", "'EQ'", 
			"'CONCAT'", "'GT'", "'GTE'", "'IF'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "PLUS", "MINUS", "DIV", "MULT", "LPAREN", "RPAREN", "LCURLY", "RCURLY", 
			"LBRACKET", "RBRACKET", "EQUAL", "SEMI", "COLON", "COMMA", "GREATER_THAN", 
			"LESS_THAN", "TRUE", "FALSE", "SUM", "ABS", "AVG", "ADD", "DIVIDE", "MULTIPLY", 
			"EQ", "CONCAT", "GT", "GTE", "IF", "DIGIT", "IDENTIFIER", "WS", "EOS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public EqlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "EqlLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000!\u00c9\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0001\u0000\u0001"+
		"\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001"+
		"\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001"+
		"\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n"+
		"\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001"+
		"\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001"+
		"\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0018\u0001"+
		"\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001"+
		"\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0004\u001d\u00a4\b\u001d\u000b\u001d\f\u001d\u00a5"+
		"\u0001\u001e\u0004\u001e\u00a9\b\u001e\u000b\u001e\f\u001e\u00aa\u0001"+
		"\u001f\u0004\u001f\u00ae\b\u001f\u000b\u001f\f\u001f\u00af\u0001\u001f"+
		"\u0001\u001f\u0001 \u0004 \u00b5\b \u000b \f \u00b6\u0001 \u0001 \u0001"+
		" \u0001 \u0001 \u0005 \u00be\b \n \f \u00c1\t \u0001 \u0001 \u0001 \u0003"+
		" \u00c6\b \u0001 \u0001 \u0001\u00bf\u0000!\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n"+
		"\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"7\u001c9\u001d;\u001e=\u001f? A!\u0001\u0000\u0004\u0001\u000009\u0002"+
		"\u0000AZaz\u0003\u0000\t\n\r\r  \u0002\u0000\n\n\r\r\u00d0\u0000\u0001"+
		"\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005"+
		"\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001"+
		"\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000"+
		"\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000"+
		"\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000"+
		"\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000"+
		"\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000"+
		"\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000"+
		"\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000"+
		"\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001"+
		"\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000"+
		"\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u0000"+
		"5\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001"+
		"\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000"+
		"\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0001"+
		"C\u0001\u0000\u0000\u0000\u0003E\u0001\u0000\u0000\u0000\u0005G\u0001"+
		"\u0000\u0000\u0000\u0007I\u0001\u0000\u0000\u0000\tK\u0001\u0000\u0000"+
		"\u0000\u000bM\u0001\u0000\u0000\u0000\rO\u0001\u0000\u0000\u0000\u000f"+
		"Q\u0001\u0000\u0000\u0000\u0011S\u0001\u0000\u0000\u0000\u0013U\u0001"+
		"\u0000\u0000\u0000\u0015W\u0001\u0000\u0000\u0000\u0017Y\u0001\u0000\u0000"+
		"\u0000\u0019[\u0001\u0000\u0000\u0000\u001b]\u0001\u0000\u0000\u0000\u001d"+
		"_\u0001\u0000\u0000\u0000\u001fa\u0001\u0000\u0000\u0000!c\u0001\u0000"+
		"\u0000\u0000#h\u0001\u0000\u0000\u0000%n\u0001\u0000\u0000\u0000\'r\u0001"+
		"\u0000\u0000\u0000)v\u0001\u0000\u0000\u0000+z\u0001\u0000\u0000\u0000"+
		"-~\u0001\u0000\u0000\u0000/\u0085\u0001\u0000\u0000\u00001\u008e\u0001"+
		"\u0000\u0000\u00003\u0091\u0001\u0000\u0000\u00005\u0098\u0001\u0000\u0000"+
		"\u00007\u009b\u0001\u0000\u0000\u00009\u009f\u0001\u0000\u0000\u0000;"+
		"\u00a3\u0001\u0000\u0000\u0000=\u00a8\u0001\u0000\u0000\u0000?\u00ad\u0001"+
		"\u0000\u0000\u0000A\u00c5\u0001\u0000\u0000\u0000CD\u0005+\u0000\u0000"+
		"D\u0002\u0001\u0000\u0000\u0000EF\u0005-\u0000\u0000F\u0004\u0001\u0000"+
		"\u0000\u0000GH\u0005/\u0000\u0000H\u0006\u0001\u0000\u0000\u0000IJ\u0005"+
		"*\u0000\u0000J\b\u0001\u0000\u0000\u0000KL\u0005(\u0000\u0000L\n\u0001"+
		"\u0000\u0000\u0000MN\u0005)\u0000\u0000N\f\u0001\u0000\u0000\u0000OP\u0005"+
		"{\u0000\u0000P\u000e\u0001\u0000\u0000\u0000QR\u0005}\u0000\u0000R\u0010"+
		"\u0001\u0000\u0000\u0000ST\u0005[\u0000\u0000T\u0012\u0001\u0000\u0000"+
		"\u0000UV\u0005]\u0000\u0000V\u0014\u0001\u0000\u0000\u0000WX\u0005=\u0000"+
		"\u0000X\u0016\u0001\u0000\u0000\u0000YZ\u0005;\u0000\u0000Z\u0018\u0001"+
		"\u0000\u0000\u0000[\\\u0005:\u0000\u0000\\\u001a\u0001\u0000\u0000\u0000"+
		"]^\u0005,\u0000\u0000^\u001c\u0001\u0000\u0000\u0000_`\u0005>\u0000\u0000"+
		"`\u001e\u0001\u0000\u0000\u0000ab\u0005<\u0000\u0000b \u0001\u0000\u0000"+
		"\u0000cd\u0005T\u0000\u0000de\u0005R\u0000\u0000ef\u0005U\u0000\u0000"+
		"fg\u0005E\u0000\u0000g\"\u0001\u0000\u0000\u0000hi\u0005F\u0000\u0000"+
		"ij\u0005A\u0000\u0000jk\u0005L\u0000\u0000kl\u0005S\u0000\u0000lm\u0005"+
		"E\u0000\u0000m$\u0001\u0000\u0000\u0000no\u0005S\u0000\u0000op\u0005U"+
		"\u0000\u0000pq\u0005M\u0000\u0000q&\u0001\u0000\u0000\u0000rs\u0005A\u0000"+
		"\u0000st\u0005B\u0000\u0000tu\u0005S\u0000\u0000u(\u0001\u0000\u0000\u0000"+
		"vw\u0005A\u0000\u0000wx\u0005V\u0000\u0000xy\u0005G\u0000\u0000y*\u0001"+
		"\u0000\u0000\u0000z{\u0005A\u0000\u0000{|\u0005D\u0000\u0000|}\u0005D"+
		"\u0000\u0000},\u0001\u0000\u0000\u0000~\u007f\u0005D\u0000\u0000\u007f"+
		"\u0080\u0005I\u0000\u0000\u0080\u0081\u0005V\u0000\u0000\u0081\u0082\u0005"+
		"I\u0000\u0000\u0082\u0083\u0005D\u0000\u0000\u0083\u0084\u0005E\u0000"+
		"\u0000\u0084.\u0001\u0000\u0000\u0000\u0085\u0086\u0005M\u0000\u0000\u0086"+
		"\u0087\u0005U\u0000\u0000\u0087\u0088\u0005L\u0000\u0000\u0088\u0089\u0005"+
		"T\u0000\u0000\u0089\u008a\u0005I\u0000\u0000\u008a\u008b\u0005P\u0000"+
		"\u0000\u008b\u008c\u0005L\u0000\u0000\u008c\u008d\u0005Y\u0000\u0000\u008d"+
		"0\u0001\u0000\u0000\u0000\u008e\u008f\u0005E\u0000\u0000\u008f\u0090\u0005"+
		"Q\u0000\u0000\u00902\u0001\u0000\u0000\u0000\u0091\u0092\u0005C\u0000"+
		"\u0000\u0092\u0093\u0005O\u0000\u0000\u0093\u0094\u0005N\u0000\u0000\u0094"+
		"\u0095\u0005C\u0000\u0000\u0095\u0096\u0005A\u0000\u0000\u0096\u0097\u0005"+
		"T\u0000\u0000\u00974\u0001\u0000\u0000\u0000\u0098\u0099\u0005G\u0000"+
		"\u0000\u0099\u009a\u0005T\u0000\u0000\u009a6\u0001\u0000\u0000\u0000\u009b"+
		"\u009c\u0005G\u0000\u0000\u009c\u009d\u0005T\u0000\u0000\u009d\u009e\u0005"+
		"E\u0000\u0000\u009e8\u0001\u0000\u0000\u0000\u009f\u00a0\u0005I\u0000"+
		"\u0000\u00a0\u00a1\u0005F\u0000\u0000\u00a1:\u0001\u0000\u0000\u0000\u00a2"+
		"\u00a4\u0007\u0000\u0000\u0000\u00a3\u00a2\u0001\u0000\u0000\u0000\u00a4"+
		"\u00a5\u0001\u0000\u0000\u0000\u00a5\u00a3\u0001\u0000\u0000\u0000\u00a5"+
		"\u00a6\u0001\u0000\u0000\u0000\u00a6<\u0001\u0000\u0000\u0000\u00a7\u00a9"+
		"\u0007\u0001\u0000\u0000\u00a8\u00a7\u0001\u0000\u0000\u0000\u00a9\u00aa"+
		"\u0001\u0000\u0000\u0000\u00aa\u00a8\u0001\u0000\u0000\u0000\u00aa\u00ab"+
		"\u0001\u0000\u0000\u0000\u00ab>\u0001\u0000\u0000\u0000\u00ac\u00ae\u0007"+
		"\u0002\u0000\u0000\u00ad\u00ac\u0001\u0000\u0000\u0000\u00ae\u00af\u0001"+
		"\u0000\u0000\u0000\u00af\u00ad\u0001\u0000\u0000\u0000\u00af\u00b0\u0001"+
		"\u0000\u0000\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000\u00b1\u00b2\u0006"+
		"\u001f\u0000\u0000\u00b2@\u0001\u0000\u0000\u0000\u00b3\u00b5\u0007\u0003"+
		"\u0000\u0000\u00b4\u00b3\u0001\u0000\u0000\u0000\u00b5\u00b6\u0001\u0000"+
		"\u0000\u0000\u00b6\u00b4\u0001\u0000\u0000\u0000\u00b6\u00b7\u0001\u0000"+
		"\u0000\u0000\u00b7\u00c6\u0001\u0000\u0000\u0000\u00b8\u00c6\u0005;\u0000"+
		"\u0000\u00b9\u00ba\u0005/\u0000\u0000\u00ba\u00bb\u0005*\u0000\u0000\u00bb"+
		"\u00bf\u0001\u0000\u0000\u0000\u00bc\u00be\t\u0000\u0000\u0000\u00bd\u00bc"+
		"\u0001\u0000\u0000\u0000\u00be\u00c1\u0001\u0000\u0000\u0000\u00bf\u00c0"+
		"\u0001\u0000\u0000\u0000\u00bf\u00bd\u0001\u0000\u0000\u0000\u00c0\u00c2"+
		"\u0001\u0000\u0000\u0000\u00c1\u00bf\u0001\u0000\u0000\u0000\u00c2\u00c3"+
		"\u0005*\u0000\u0000\u00c3\u00c6\u0005/\u0000\u0000\u00c4\u00c6\u0005\u0000"+
		"\u0000\u0001\u00c5\u00b4\u0001\u0000\u0000\u0000\u00c5\u00b8\u0001\u0000"+
		"\u0000\u0000\u00c5\u00b9\u0001\u0000\u0000\u0000\u00c5\u00c4\u0001\u0000"+
		"\u0000\u0000\u00c6\u00c7\u0001\u0000\u0000\u0000\u00c7\u00c8\u0006 \u0001"+
		"\u0000\u00c8B\u0001\u0000\u0000\u0000\u0007\u0000\u00a5\u00aa\u00af\u00b6"+
		"\u00bf\u00c5\u0002\u0006\u0000\u0000\u0002\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}